{"version":3,"sources":["components/hook/form-hook.js","components/todo/form/form.js","components/context/toggleShow.js","components/context/paginations.js","components/todo/list/list.js","components/hook/axios.js","components/todo/pages/pageNumbers.js","components/todo/todo/toggleShow.js","components/todo/pages/numOfItem.js","components/todo/todo/todo-connected.js","app.js","components/todo/header/header.js","index.js"],"names":["useForm","cb","useState","item","setItem","event","target","name","value","e","preventDefault","reset","TodoForm","props","handleSubmit","handleInputChange","className","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","type","defaultValue","min","max","Button","variant","ToggleContext","React","createContext","ToggleStatusHideShow","changeStatus","setState","status","state","toggleStatus","Provider","this","children","Component","PaginationContext","Pagination","currentPage","setCurrentPage","itemPerPage","setItemPerPage","indexOfLastItem","indexOfFirstItem","currentItem","list","sort","a","b","difficulty","slice","paginate","pageNumber","numberOfPages","TodoList","toggleContext","useContext","pagination","ListGroup","map","Card","complete","key","_id","Header","Badge","assignee","onClick","handleDelete","Text","handleComplete","text","todoAPI","useAjax","setList","due","Date","axios","url","method","mode","cache","headers","data","JSON","stringify","then","response","catch","console","error","id","filter","i","savedItem","listItem","get","result","totalitems","pageNumbers","Math","ceil","push","log","number","length","Content","size","context","contextType","ChengeNumberOfPages","ToDo","_addItem","_toggleComplete","_getTodoItems","deleteItem","useEffect","Navbar","bg","Nav","App","Link","href","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cceb207f.chunk.js","sourcesContent":["import { useState } from 'react';\n// cb => callback => function\nconst useForm = (cb) => {\n  const [item, setItem] = useState({});\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset()\n    cb(item);\n  };\n  const handleInputChange = (event) => {\n    setItem({ ...item, [event.target.name]: event.target.value });\n  };\n  return [item, handleInputChange, handleSubmit];\n};\n\nexport default useForm;","import React, { useState } from 'react';\nimport './form.scss';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport useForm from '../../hook/form-hook.js'\n// function TodoForm(props){\n//   const [item,setItem] = useState({});\n\n//   const handleInputChange = e => {\n//       setItem( {...item, [e.target.name]: e.target.value  });\n      \n//   };\n\n//   const  handleSubmit = (e) => {\n//     e.preventDefault();\n//     e.target.reset();\n//     props.handleSubmit(item);\n//     // const item1 = {};\n//     setItem({});\n//   };\nfunction TodoForm(props){\n  // const [item,setItem] = useState({});\n  const [item, handleInputChange, handleSubmit] = useForm(handleForm);\n  function handleForm(item) {\n    props.handleSubmit(item)\n  }\n    return (\n      <>\n      <div className=\"form\">\n        <h3>Add Item</h3>\n\n        <Form onSubmit={handleSubmit}>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>To Do Item</Form.Label>\n    <Form.Control  name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange} />\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Assigned To</Form.Label>\n    <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicRange\">\n    <Form.Label>Range</Form.Label>\n    <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n  </Form.Group>\n\n  <Button variant=\"primary\" type=\"submit\" className=\"button\">\n  Add Item\n  </Button>\n</Form>\n</div>\n        {/* <form onSubmit={handleSubmit}>\n          <label>\n            <span>To Do Item</span>\n            <input\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            <span>Difficulty Rating</span>\n\n \n            {/* <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} /> */}\n          {/* </label>\n          <label>\n            <span>Assigned To</span>\n            <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </label>\n          <button>Add Item</button>\n        </form> */}\n\n        {/* \n        \n        // */} \n        \n      </>\n    );\n\n\n}\nexport default TodoForm;","import React from 'react';\n\nexport const ToggleContext = React.createContext();\n\nclass ToggleStatusHideShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        status: 'show',\n      toggleStatus: this.changeStatus,\n    };\n  }\n  changeStatus = () => {\n    //   console.log('this.props.list' , this.props.list);\n      \n    this.setState({ status: this.state.status === 'show' ? 'hide' : 'show' });\n  };\n  render() {\n    return (\n      <ToggleContext.Provider value={this.state}>\n        {this.props.children}\n      </ToggleContext.Provider>\n    );\n  }\n}\n\nexport default ToggleStatusHideShow;","import React ,{useState  } from 'react';\n\nexport const PaginationContext = React.createContext();\n\nfunction Pagination (props) {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemPerPage, setItemPerPage] = useState(3);\n  \n    const indexOfLastItem = currentPage * itemPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemPerPage;\n    const list = props.list.sort((a,b)=>   a.difficulty > b.difficulty ? 1 : -1 );\n    let currentItem = list.slice(indexOfFirstItem, indexOfLastItem);\n  \n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n    const setItem = numberOfPages => setItemPerPage(numberOfPages);\n\n const state = {\n    currentPage,\n    itemPerPage,\n    setCurrentPage :setCurrentPage,\n    setItemPerPage : setItemPerPage,\n    currentItem,\n    paginate,\n    setItem,\n\n }\n \n \n    return (\n      <PaginationContext.Provider value={state}>\n        {props.children}\n      </PaginationContext.Provider>\n    );\n  \n}\n\nexport default Pagination;","import React , { useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport { ToggleContext } from '../../context/toggleShow';\nimport { PaginationContext }  from '../../context/paginations'\nimport './list.scss';\nfunction TodoList (props){\n  const toggleContext = useContext(ToggleContext);\n  const pagination = useContext(PaginationContext);\n  return (\n  \n    <ListGroup>\n    {pagination.currentItem.map(item => (\n      <Card\n                className={`complete-${item.complete} complete-${item.complete}-${toggleContext.status} card`}\n                key={item._id} \n              >\n                <Card.Header>\n                  <div className=\"header\">\n                <Badge variant=\"success\" className={`status-${item.complete}`}>{item.complete}</Badge>\n                {' '} {item.assignee}\n                </div>\n                <Button variant=\"light\" className='delete' onClick={() => props.handleDelete(item._id)}>\n                X</Button></Card.Header>\n                <Card.Text onClick={() => props.handleComplete(item._id)}  >\n                <span className=\"text\" className={`click-${item.complete}`}>  {item.text} </span>\n                  <span className=\"dif\"> difficulty: {item.difficulty }</span>\n                </Card.Text>\n                \n               \n              </Card>\n))}\n \n </ListGroup>\n     );\n\n}\n\nexport default TodoList;","import { useState } from 'react';\nimport axios from 'axios';\nconst todoAPI = 'https://api-testtt.herokuapp.com/api/v1/todo';\n\nconst useAjax = () => {\n    const [list, setList] = useState([]);\n\n    const _addItem = (item) => {\n      item.due = new Date();\n      axios({\n        url:todoAPI,\n        method: 'post',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        data: JSON.stringify(item)\n      })\n        .then(response => {\n            setList([...list, response.data])\n            })\n        .catch(console.error);\n    };\n  \n    const _toggleComplete = id => {\n  \n      let item = list.filter(i => i._id === id)[0] || {};\n  \n      if (item._id) {\n  \n        item.complete = item.complete === 'complete' ? 'pending' : 'complete';\n  \n        let url = `${todoAPI}/${id}`;\n  \n        axios({\n          method: 'put',\n          url : url,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: { 'Content-Type': 'application/json' },\n          data: JSON.stringify(item)\n        })\n          .then(savedItem => {\n            setList(list.map(listItem => listItem._id === item._id ? savedItem.data : listItem));\n          })\n          .catch(console.error);\n      }\n    };\n    const deleteItem = id => {\n        let item = list.filter(i => i._id === id)[0] || {};\n        if (item._id) {\n          let url = `${todoAPI}/${id}`;\n    \n          axios( {\n              url : url,\n            method: 'delete',\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: { 'Content-Type': 'application/json' },\n          })\n            .then(() => {\n              setList(list.filter(listItem => listItem._id != item._id ));\n            })\n            .catch(console.error);\n        }\n      };\n  \n    const _getTodoItems = () => {\n    axios.get(todoAPI)\n      .then(response => {\n        setList(response.data.result)})\n    };\n\n    return [list , _addItem , _toggleComplete , _getTodoItems ,deleteItem]\n\n}\n\n\nexport default useAjax;","import React, {useContext} from 'react';\nimport { PaginationContext }  from '../../context/paginations'\n\nconst Pagination = ({totalitems}) => {\n  const pageNumbers = [];\n  const pagination = useContext(PaginationContext);\n\n  for (let i = 1; i <= Math.ceil(totalitems / pagination.itemPerPage); i++) {\n    pageNumbers.push(i);\n  }\nconsole.log('fff' , pagination);\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => pagination.paginate(number)}  className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <ul className='pagination'>\n          <li className='page-item'>\n            <a onClick={ pageNumbers.length != pagination.currentPage ? () => pagination.paginate(pagination.currentPage++): () => pagination.paginate(pagination.currentPage)}  className='page-link'>\n              Next\n            </a>\n          </li>\n          <li  className='page-item'>\n            <a onClick={pagination.currentPage > 1 ? () => pagination.paginate(pagination.currentPage--): () => pagination.paginate(pagination.currentPage)}  className='page-link'>\n              Previous\n            </a>\n          </li>\n       \n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React from 'react';\nimport { ToggleContext } from '../../context/toggleShow.js';\nimport Button from 'react-bootstrap/Button';\nclass Content extends React.Component {\n\n  static contextType = ToggleContext; \n\n  render() {\n    return (\n      <>\n       <Button variant=\"primary\" size=\"lg\"  onClick={this.context.toggleStatus} className=\"hideShow\">\n       {this.context.status === 'show' ? 'hide' : 'show'} complete items\n  </Button>{' '}\n        {/* <button onClick={this.context.toggleStatus}>\n          {this.context.status === 'show' ? 'hide' : 'show'} complete items\n        </button> */}\n      </>\n    );\n  }\n}\nexport default Content;","import React, { useContext } from 'react';\nimport { PaginationContext }  from '../../context/paginations'\n// import './todo.scss';\nfunction ChengeNumberOfPages  () {\n\nconst pagination = useContext(PaginationContext);\nconst changHandler = (e) =>{\n    pagination.setItem(e.target.value)\n}\n  \n    return (\n      <>\n       <select onChange={changHandler}> \n       <option>items per page</option>\n           <option value='3'>3</option>\n           <option value='5'>5</option>\n           <option value='7'>7</option>\n       </select>\n      </>\n    );\n  \n}\nexport default ChengeNumberOfPages;","import React, { useEffect, useContext } from 'react';\nimport TodoForm from '../form/form.js';\nimport TodoList from '../list/list.js';\nimport useAjax from '../../hook/axios.js'\nimport './todo.scss';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar'; \nimport Pagination from '../pages/pageNumbers.js'\nimport ToggleHideShow from './toggleShow.js'\nimport PaginationContext from '../../context/paginations.js'\nimport ToggleShowProvider from '../../context/toggleShow.js';\nimport ChangeNumberOfPages from '../pages/numOfItem.js'\n\nconst ToDo = () => {\n  const [list , _addItem , _toggleComplete , _getTodoItems ,deleteItem] = useAjax()\n  useEffect(_getTodoItems, []);\n\n  return (\n    <>\n    \n    <Navbar bg=\"dark\" variant=\"dark\" className=\"navBar\">\n               <Nav className=\"mr-auto\">\n                    <h2>\n                          To Do list Manager ({list.filter(item => item.complete === 'pending').length})\n                    </h2>\n               </Nav>\n         </Navbar>\n         \n\n         <section className=\"todo\">\n\n<div className=\"form\">\n  <TodoForm handleSubmit={_addItem} />\n</div>\n<PaginationContext list={list}>\n<div className=\"list\">\n          <ToggleShowProvider list={list}>\n          <ToggleHideShow/>\n          <ChangeNumberOfPages/>\n\n  <TodoList\n    handleComplete={_toggleComplete}\n    handleDelete={deleteItem}\n  />\n            </ToggleShowProvider>\n          <Pagination\n        totalitems={list.length}\n      />\n   </div>\n</PaginationContext>\n</section>\n      {/* <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n            handleDelete={deleteItem}\n          />\n        </div>\n      </section> */}\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo/todo-connected.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar'; \nexport default class Header extends React.Component {\n    render() {\n      return (\n        <>\n         <Navbar bg=\"primary\" variant=\"dark\">\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\">Home</Nav.Link>\n    </Nav>\n  </Navbar>\n        </>\n      );\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './app.js';\nimport Header from './components/todo/header/header.js';\nclass Main extends React.Component {\n  render() {\n    return(\n      <>\n      <Header/>\n      <App />\n      </>\n      )\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}