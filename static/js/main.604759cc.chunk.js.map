{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","onSubmit","preventDefault","reset","handleSubmit","placeholder","onChange","defaultValue","type","min","max","TodoList","list","map","className","complete","toString","key","_id","onClick","handleComplete","text","assignee","ToDo","addItem","Math","random","setState","state","toggleComplete","id","filter","i","listItem","this","difficulty","length","React","Component","App","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4PAgDeA,MA9Cf,SAAkBC,GAAO,IAAD,EACCC,mBAAS,IADV,mBACfC,EADe,KACVC,EADU,KAGhBC,EAAoB,SAAAC,GACtBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAW/C,OACE,oCACE,wCACA,0BAAMC,SAVU,SAACJ,GACrBA,EAAEK,iBACFL,EAAEC,OAAOK,QACTX,EAAMY,aAAaV,GAEnBC,EAAQ,MAMF,+BACE,4CACA,2BACEI,KAAK,OACLM,YAAY,sBACZC,SAAUV,KAGd,+BACE,mDACA,2BAAOW,aAAa,IAAIC,KAAK,QAAQC,IAAI,IAAIC,IAAI,IAAIX,KAAK,aAAaO,SAAUV,KAEnF,+BACE,6CACA,2BAAOY,KAAK,OAAOT,KAAK,WAAWM,YAAY,cAAcC,SAAUV,KAEzE,+CCfKe,MAjBf,SAAmBnB,GACjB,OACQ,4BACGA,EAAMoB,KAAKC,KAAI,SAAAnB,GAAI,OAClB,wBACEoB,UAAS,mBAAcpB,EAAKqB,SAASC,YACrCC,IAAKvB,EAAKwB,KAEV,0BAAMC,QAAS,kBAAM3B,EAAM4B,eAAe1B,EAAKwB,OAC5CxB,EAAK2B,KADR,MACiB3B,EAAK4B,gBC0DvBC,G,wDAhEb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAMRgC,QAAU,SAAC9B,GACTA,EAAKwB,IAAMO,KAAKC,SAChBhC,EAAKqB,UAAW,EAChB,EAAKY,SAAS,CAAEf,KAAK,GAAD,mBAAM,EAAKgB,MAAMhB,MAAjB,CAAuBlB,OAV1B,EAanBmC,eAAiB,SAAAC,GAEf,IAAIpC,EAAO,EAAKkC,MAAMhB,KAAKmB,QAAO,SAAAC,GAAC,OAAIA,EAAEd,MAAQY,KAAI,IAAM,GAE3D,GAAIpC,EAAKwB,IAAK,CACZxB,EAAKqB,UAAYrB,EAAKqB,SACtB,IAAIH,EAAO,EAAKgB,MAAMhB,KAAKC,KAAI,SAAAoB,GAAQ,OAAIA,EAASf,MAAQxB,EAAKwB,IAAMxB,EAAOuC,KAC9E,EAAKN,SAAS,CAACf,WAlBjB,EAAKgB,MAAQ,CACXhB,KAAM,IAHS,E,gEAkCjBsB,KAAKP,SAAS,CAACf,KARJ,CACT,CAAEM,IAAK,EAAGH,UAAU,EAAOM,KAAM,oBAAqBc,WAAY,EAAGb,SAAU,YAC/E,CAAEJ,IAAK,EAAGH,UAAU,EAAOM,KAAM,iBAAkBc,WAAY,EAAGb,SAAU,YAC5E,CAAEJ,IAAK,EAAGH,UAAU,EAAOM,KAAM,eAAgBc,WAAY,EAAGb,SAAU,YAC1E,CAAEJ,IAAK,EAAGH,UAAU,EAAMM,KAAM,cAAec,WAAY,EAAGb,SAAU,YACxE,CAAEJ,IAAK,EAAGH,UAAU,EAAOM,KAAM,aAAcc,WAAY,EAAGb,SAAU,iB,+BAO1E,OACE,oCACE,gCACE,yCACWY,KAAKN,MAAMhB,KAAKmB,QAAO,SAAArC,GAAI,OAAKA,EAAKqB,YAAUqB,OAD1D,uBAKF,6BAAStB,UAAU,QAEjB,6BACE,kBAAC,EAAD,CAAUV,aAAc8B,KAAKV,WAG/B,6BACE,kBAAC,EAAD,CACEZ,KAAMsB,KAAKN,MAAMhB,KACjBQ,eAAgBc,KAAKL,wB,GAzDhBQ,IAAMC,YCFJC,E,uKAEjB,OACE,oCACE,kBAAC,EAAD,W,GAJyBF,IAAMC,WCCjCE,E,uKAEF,OAAO,kBAAC,EAAD,U,GAFQH,IAAMC,WAMnBG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,K","file":"static/js/main.604759cc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction TodoForm(props){\n  const [item,setItem] = useState({});\n\n  const handleInputChange = e => {\n      setItem( {...item, [e.target.name]: e.target.value  });\n      \n  };\n\n  const  handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    // const item1 = {};\n    setItem({});\n  };\n    return (\n      <>\n        <h3>Add Item</h3>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <span>To Do Item</span>\n            <input\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            <span>Difficulty Rating</span>\n            <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </label>\n          <label>\n            <span>Assigned To</span>\n            <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </label>\n          <button>Add Item</button>\n        </form>\n\n        {/* \n        \n        */}\n      </>\n    );\n\n\n}\nexport default TodoForm;","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\n\nfunction TodoList (props){\n  return (\n          <ul>\n            {props.list.map(item => (\n              <li\n                className={`complete-${item.complete.toString()}`}\n                key={item._id}\n              >\n                <span onClick={() => props.handleComplete(item._id)}>\n                  {item.text} - {item.assignee}\n                </span>\n              </li>\n            ))}\n          </ul>\n        );\n}\n\nexport default TodoList;","import React from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport './todo.scss';\n\nclass ToDo extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n\n  addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    this.setState({ list: [...this.state.list, item]});\n  };\n\n  toggleComplete = id => {\n\n    let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n      this.setState({list});\n    }\n\n  };\n\n  componentDidMount() {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n\n    this.setState({list});\n  }\n\n  render() {\n    return (\n      <>\n        <header>\n          <h2>\n          There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleSubmit={this.addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={this.state.list}\n              handleComplete={this.toggleComplete}\n            />\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}